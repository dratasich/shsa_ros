#
# SHSA model of mobile robot (daisy).
#
# 2017-09-20
# Denise Ratasich
#

# generate graph from given relations; edges are generated depending on the
# outputs/functions defined here
relations:
  rdl:
    dmin:
      in: [laser]
      fct: "min(laser)"
  rds:
    dmin:
      in: [sonar]
      fct: "min(sonar)"
  rdb:
    dmin:
      in: [bumper]
      fct: "boolean_and(bumper) * FLOAT_MAX"
  rdm:
    dmin:
      in: [position, map]
      fct: "map(position)"
  rda:
    dmin:
      in: [current, velocity]
      fct: "1 - int(current > velocity)"
  rpv:
    velocity:
      in: [position]
      fct: "d position / dt"


# node properties
# - type: 0..variable, 1..relation (must match enum in shsamodel.py)
# - fct: relation has a function for code generation
# - provision: topics that provide this variable
# - constant: marks nodes as constants and specifies this value
properties:

  # type will be added (w.r.t. 'relations' given above)
  # fct will be added (w.r.t. 'relations' given above)

  # If you use the model for a ROS application a full variable-to-topic mapping
  # is needed (by shsa_node.py of shsa_ros)! Specify: provision, constant,
  # need.

  # set provision (list of services) or provided (bool, default: False)
  # needed by ROS package (use provision instead of provided)
  provision:
    dmin: []  # "/emergency_stop/dmin" removed to simulate missing provision
    laser: []  # "/hokuyo/scan" removed to simulate missing provision
    sonar: ["/p2os/sonar/ranges"]
    bumper: ["/p2os/bumper"]  # fake
    map: []
    position: ["/p2os/pose/pose/position"]
    current: ["/uc/adc/a0"]  # fake
    velocity: ["/p2os/pose/twist/twist/linear/x"]

  # constants where no topic is available for publishing the value
  # needed by ROS package (otherwise a topic has to be provided for constants)
  # constant:
  #   current_th: 2
  #   bumper_th: 0.5

  # needed variables are provisions that are in use
  need:
    dmin: ["/emergency_stop/dmin/data"]

  # workaround for properties of provisions
  # TODO: extract from provision_properties
  accuracy:
    laser: 0.99
    sonar: 0.8
    bumper: 0.1
    position: 0.7
    current: 0.5
    velocity: 0.9

  # workaround for shsa_node.py of shsa_ros
  # TODO: extract from provision_properties
  period:
    dmin: 0.1


# provision properties
# - need: true if topic is used/needed
# - pubrate: publishing rate of the topic
# - accuracy
provision_properties:

  # properties below are per provision and shall not be saved to a variable in
  # the SHSA model, but in a dictionary with key=provision

  "/emergency_stop/dmin/data":
    need: True
    pubrate: 10
    # TODO: accuracy shall be derived

  "/hokuyo/scan/ranges":
    accuracy: 0.99

  "/p2os/sonar/ranges":
    accuracy: 0.8

  "/p2os/bumper":  # fake
    accuracy: 0.1

  "/p2os/pose/pose/position":
    accuracy: 0.7

  "/uc/adc/a0":  # fake
    accuracy: 0.5

  "/p2os/pose/twist/twist/linear/x":
    accuracy: 0.9
